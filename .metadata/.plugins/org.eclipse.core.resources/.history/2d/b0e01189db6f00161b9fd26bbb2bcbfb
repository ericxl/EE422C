// SortTools.java 
/*
 * EE422C Project 1 submission by
 * Replace <...> with your actual data.
 * Xiaoyong Liang
 * XL5432
 * 16445
 * Fall 2016
 */
package assignment1;

/**
 * This is the SortTools class for assignment 1
 * 
 * @author Eric
 *
 */
public class SortTools {
	/**
	 * This method tests to see if the given array is sorted.
	 * 
	 * @param x
	 *            is the array
	 * @param n
	 *            is the size of the input to be checked
	 * @return true if array is sorted
	 */
	public static boolean isSorted(int[] x, int n) {
		if (x == null)
			return false;
		int len = n;
		if (x.length < len) {
			len = x.length;
		}
		if (len <= 1) {
			return true;
		}
		for (int i = 1; i < len; i++) {
			if (x[i - 1] > x[i]) {
				return false;
			}
		}
		return true;
	}

	/**
	 * Finds an element in array
	 * 
	 * @param x
	 * @param n
	 * @param v
	 * @return
	 */
	public static int find(int[] x, int n, int v) {
		if (x == null)
			return -1;
		int len = n;
		if (x.length < len) {
			len = x.length;
		}
		if (len <= 0) {
			return -1;
		}
		int start = len - 1;
		int current = (start - (start % 2)) / 2;
		while (start != current) {
			if (x[current] == v) {
				return current;
			}
			if (x[current] > n) {
				//should search in lower half
				start = current;
				current = (start - (start % 2)) / 2;
			} else {
				//should search in upper half
			}
		}
		if (x[current] == v) {
			return current;
		}
		return -1;
	}

	public static int[] insertGeneral(int[] x, int n, int v) {
		return null;
	}

	public static int insertInPlace(int[] x, int n, int v) {
		return 1;
	}

	public static void insertSort(int[] x, int n) {

	}

}
